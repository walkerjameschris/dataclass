% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataclass.R
\name{dataclass}
\alias{dataclass}
\title{Construct a dataclass in R}
\usage{
dataclass(...)
}
\description{
Building a dataclass is easy! Provide names for each of the elements you want
in your dataclass and an associated validator. The dataclass package comes
with several build in validators, but you can define a custom validator as
an anonymous function or named function to be bundled with your data.
}
\details{
This function will return a new function with named argument for each of the
elements you define here. If you
}
\examples{
\dontrun{
my_dataclass <- dataclass(
  min_date = dte_vec(1), # Ensures min_date is a date vector of length 1
  max_date = dte_vec(1), # Ensures max_date is a date vector of length 1
  run_data = df_like(),  # Ensures run_date is a data object (i.e. tibble)
  run_note = chr_vec(1)  # Ensures run_note is a character vector of length 1
)

# This returns a validated list!
my_dataclass(
  min_date = as.Date("2022-01-01"),
  max_date = as.Date("2023-01-01"),
  run_data = head(mtcars),
  run_note = "A note!"
)

# This throws an error since run_data is not a data frame
my_dataclass(
  min_date = as.Date("2022-01-01"),
  max_date = as.Date("2023-01-01"),
  run_data = c(1, 2, 3),
  run_note = "A note!"
)

# An example with anonymous functions
dataclass(
  start_date = dte_vec(1),
  # Ensures calculation is a column in this data and is data like
  results_df = function(x) "calculation" \%in\% names(x) && df_like(x)
)

# Define a dataclass for creating a tibble! Simply omit length restrictions:
my_tibble_class <- dataclass(
  num_col = num_vec(),
  lgl_col = lgl_vec(),
  dte_col = dte_col()
)
}
}
